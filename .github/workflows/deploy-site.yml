name: Build and Deploy
on:
  push:
    branches: 
      - master
  repository_dispatch:
    types: deploy

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DNS_NAME: ${{ secrets.DNS_ZONE }}
    steps:
    - name: Checkout branch
      uses: actions/checkout@master
      with:
        lfs: true
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2.4.13
      with:
        extended: true
    - name: Build site
      run: |
        hugo --minify
        echo "$DNS_NAME" > public/CNAME
        cp -a .forestry/admin public
    - name: Save built site for deployment
      uses: actions/upload-artifact@v2
      with:
        name: public
        path: public/

  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    - name: Download saved site
      uses: actions/download-artifact@v2
      with:
        name: public
    - name: Deploy to kshlm.github.io
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        REPOSITORY_NAME: kshlm/kshlm.github.io
        BRANCH: master
        FOLDER: public
        
  deploy-ipfs:
    runs-on: ubuntu-latest
    needs: build
    env:
      NPM_PACKAGES:  .npm_packages
      IPFS_DEPLOY_VERSION: 8.0.1
      IPFS_DEPLOY_CLOUDFLARE__API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      IPFS_DEPLOY_CLOUDFLARE__ZONE: ${{ secrets.CF_ZONE }}
      IPFS_DEPLOY_CLOUDFLARE__RECORD: ${{ secrets.DNS_RECORD }}
    steps:    
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4    
      - name: Setup non-root `npm install -g`
        run: |
          mkdir ~/$NPM_PACKAGES
          npm config set prefix ~/$NPM_PACKAGES   
      - name: Update PATH
        uses: myci-actions/export-env-var@1
        with:
          name: PATH
          value: $PATH:$HOME/$NPM_PACKAGES/bin
      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/${{ env.NPM_PACKAGES }}
          key: ${{ runner.os }}-ipfs-deploy-${{ env.IPFS_DEPLOY_VERSION }}
      - name: Install ipfs-deploy
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install -g ipfs-deploy@${{ env.IPFS_DEPLOY_VERSION }}
      - name: Download saved site
        uses: actions/download-artifact@v2
        with:
          name: public
      - name: Run ipfs-deploy
        run: ipfs-deploy -C -O -d cloudflare public
  
  delete-artifacts:
    runs-on: ubuntu-latest
    needs:
    - deploy-gh-pages
    - deploy-ipfs
    steps:
      - name: Delete saved build artifacts
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: public
          failOnError: false
